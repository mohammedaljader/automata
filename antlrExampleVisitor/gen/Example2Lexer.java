// Generated from Example2.g4 by ANTLR 4.10.1
package gen;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class Example2Lexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		DO=1, WHILE=2, REPEAT=3, UNTIL=4, IF=5, ELSE=6, IS_EQUAL=7, MUL=8, DIV=9, 
		ADD=10, SUB=11, POW=12, FACT=13, DOT=14, COMMA=15, SEMICOLON=16, COLON=17, 
		OPAR=18, CPAR=19, FOR=20, OPEN_CURLY_BRACKET=21, CLOSE_CURLY_BRACKET=22, 
		OPEN_SQUARE_BRACKET=23, CLOSE_SQUARE_BRACKET=24, QUESTION_MARK=25, AND=26, 
		OR=27, NOT=28, INTEGER=29, CHAR=30, RECORD=31, GREATER_OR_EQUAL=32, SMALLER_OR_EQUAL=33, 
		GREATHER_THAN=34, SMALLER_THAN=35, EQUAL=36, NOT_EQUAL=37, PRINT=38, INT=39, 
		STRING=40, BOOL=41, ID=42, COMMENT=43, WS=44, EQUAL_INCREMENT=45, EQUAL_DECREMENT=46, 
		INCREMENT=47, DECREMENT=48;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"DO", "WHILE", "REPEAT", "UNTIL", "IF", "ELSE", "IS_EQUAL", "MUL", "DIV", 
			"ADD", "SUB", "POW", "FACT", "DOT", "COMMA", "SEMICOLON", "COLON", "OPAR", 
			"CPAR", "FOR", "OPEN_CURLY_BRACKET", "CLOSE_CURLY_BRACKET", "OPEN_SQUARE_BRACKET", 
			"CLOSE_SQUARE_BRACKET", "QUESTION_MARK", "AND", "OR", "NOT", "INTEGER", 
			"CHAR", "RECORD", "GREATER_OR_EQUAL", "SMALLER_OR_EQUAL", "GREATHER_THAN", 
			"SMALLER_THAN", "EQUAL", "NOT_EQUAL", "PRINT", "INT", "STRING", "BOOL", 
			"ID", "COMMENT", "WS", "EQUAL_INCREMENT", "EQUAL_DECREMENT", "INCREMENT", 
			"DECREMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'do'", "'while'", "'repeat'", "'until'", "'if'", "'else'", "'='", 
			"'*'", "'/'", "'+'", "'-'", "'^'", "'!'", "'.'", "','", "';'", "':'", 
			"'('", "')'", "'for'", "'{'", "'}'", "'['", "']'", "'?'", "'and'", "'or'", 
			"'not'", "'integer'", "'char'", "'record'", "'>='", "'<='", "'>'", "'<'", 
			"'=='", "'!='", "'print'", null, null, null, null, null, null, "'+='", 
			"'-='", "'++'", "'--'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "DO", "WHILE", "REPEAT", "UNTIL", "IF", "ELSE", "IS_EQUAL", "MUL", 
			"DIV", "ADD", "SUB", "POW", "FACT", "DOT", "COMMA", "SEMICOLON", "COLON", 
			"OPAR", "CPAR", "FOR", "OPEN_CURLY_BRACKET", "CLOSE_CURLY_BRACKET", "OPEN_SQUARE_BRACKET", 
			"CLOSE_SQUARE_BRACKET", "QUESTION_MARK", "AND", "OR", "NOT", "INTEGER", 
			"CHAR", "RECORD", "GREATER_OR_EQUAL", "SMALLER_OR_EQUAL", "GREATHER_THAN", 
			"SMALLER_THAN", "EQUAL", "NOT_EQUAL", "PRINT", "INT", "STRING", "BOOL", 
			"ID", "COMMENT", "WS", "EQUAL_INCREMENT", "EQUAL_DECREMENT", "INCREMENT", 
			"DECREMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public Example2Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Example2.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u00000\u011c\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001"+
		"\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001"+
		"\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001"+
		"\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001"+
		"\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001"+
		"\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001"+
		"\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001"+
		"\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001"+
		"\u001e\u0001\u001f\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001 \u0001"+
		"!\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0001#\u0001$\u0001$\u0001$\u0001"+
		"%\u0001%\u0001%\u0001%\u0001%\u0001%\u0001&\u0004&\u00de\b&\u000b&\f&"+
		"\u00df\u0001\'\u0001\'\u0005\'\u00e4\b\'\n\'\f\'\u00e7\t\'\u0001\'\u0001"+
		"\'\u0001(\u0001(\u0001(\u0001(\u0001(\u0001(\u0001(\u0001(\u0001(\u0003"+
		"(\u00f4\b(\u0001)\u0001)\u0005)\u00f8\b)\n)\f)\u00fb\t)\u0001*\u0001*"+
		"\u0001*\u0001*\u0004*\u0101\b*\u000b*\f*\u0102\u0001*\u0003*\u0106\b*"+
		"\u0001*\u0001*\u0001+\u0004+\u010b\b+\u000b+\f+\u010c\u0001+\u0001+\u0001"+
		",\u0001,\u0001,\u0001-\u0001-\u0001-\u0001.\u0001.\u0001.\u0001/\u0001"+
		"/\u0001/\u0001\u0102\u00000\u0001\u0001\u0003\u0002\u0005\u0003\u0007"+
		"\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b"+
		"\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013"+
		"\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b7\u001c9\u001d"+
		";\u001e=\u001f? A!C\"E#G$I%K&M\'O(Q)S*U+W,Y-[.]/_0\u0001\u0000\u0006\u0001"+
		"\u000009\u0003\u0000\n\n\r\r\"\"\u0003\u0000AZ__az\u0006\u0000!!..09A"+
		"Z__az\u0001\u0001\n\n\u0003\u0000\t\n\r\r  \u0121\u0000\u0001\u0001\u0000"+
		"\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000"+
		"\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000"+
		"\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000"+
		"\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000"+
		"\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000"+
		"\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000"+
		"\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000"+
		"\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000"+
		"#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001"+
		"\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000"+
		"\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0000"+
		"1\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001"+
		"\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000"+
		"\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000"+
		"?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001"+
		"\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000"+
		"\u0000\u0000I\u0001\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000"+
		"M\u0001\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q\u0001"+
		"\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000U\u0001\u0000\u0000"+
		"\u0000\u0000W\u0001\u0000\u0000\u0000\u0000Y\u0001\u0000\u0000\u0000\u0000"+
		"[\u0001\u0000\u0000\u0000\u0000]\u0001\u0000\u0000\u0000\u0000_\u0001"+
		"\u0000\u0000\u0000\u0001a\u0001\u0000\u0000\u0000\u0003d\u0001\u0000\u0000"+
		"\u0000\u0005j\u0001\u0000\u0000\u0000\u0007q\u0001\u0000\u0000\u0000\t"+
		"w\u0001\u0000\u0000\u0000\u000bz\u0001\u0000\u0000\u0000\r\u007f\u0001"+
		"\u0000\u0000\u0000\u000f\u0081\u0001\u0000\u0000\u0000\u0011\u0083\u0001"+
		"\u0000\u0000\u0000\u0013\u0085\u0001\u0000\u0000\u0000\u0015\u0087\u0001"+
		"\u0000\u0000\u0000\u0017\u0089\u0001\u0000\u0000\u0000\u0019\u008b\u0001"+
		"\u0000\u0000\u0000\u001b\u008d\u0001\u0000\u0000\u0000\u001d\u008f\u0001"+
		"\u0000\u0000\u0000\u001f\u0091\u0001\u0000\u0000\u0000!\u0093\u0001\u0000"+
		"\u0000\u0000#\u0095\u0001\u0000\u0000\u0000%\u0097\u0001\u0000\u0000\u0000"+
		"\'\u0099\u0001\u0000\u0000\u0000)\u009d\u0001\u0000\u0000\u0000+\u009f"+
		"\u0001\u0000\u0000\u0000-\u00a1\u0001\u0000\u0000\u0000/\u00a3\u0001\u0000"+
		"\u0000\u00001\u00a5\u0001\u0000\u0000\u00003\u00a7\u0001\u0000\u0000\u0000"+
		"5\u00ab\u0001\u0000\u0000\u00007\u00ae\u0001\u0000\u0000\u00009\u00b2"+
		"\u0001\u0000\u0000\u0000;\u00ba\u0001\u0000\u0000\u0000=\u00bf\u0001\u0000"+
		"\u0000\u0000?\u00c6\u0001\u0000\u0000\u0000A\u00c9\u0001\u0000\u0000\u0000"+
		"C\u00cc\u0001\u0000\u0000\u0000E\u00ce\u0001\u0000\u0000\u0000G\u00d0"+
		"\u0001\u0000\u0000\u0000I\u00d3\u0001\u0000\u0000\u0000K\u00d6\u0001\u0000"+
		"\u0000\u0000M\u00dd\u0001\u0000\u0000\u0000O\u00e1\u0001\u0000\u0000\u0000"+
		"Q\u00f3\u0001\u0000\u0000\u0000S\u00f5\u0001\u0000\u0000\u0000U\u00fc"+
		"\u0001\u0000\u0000\u0000W\u010a\u0001\u0000\u0000\u0000Y\u0110\u0001\u0000"+
		"\u0000\u0000[\u0113\u0001\u0000\u0000\u0000]\u0116\u0001\u0000\u0000\u0000"+
		"_\u0119\u0001\u0000\u0000\u0000ab\u0005d\u0000\u0000bc\u0005o\u0000\u0000"+
		"c\u0002\u0001\u0000\u0000\u0000de\u0005w\u0000\u0000ef\u0005h\u0000\u0000"+
		"fg\u0005i\u0000\u0000gh\u0005l\u0000\u0000hi\u0005e\u0000\u0000i\u0004"+
		"\u0001\u0000\u0000\u0000jk\u0005r\u0000\u0000kl\u0005e\u0000\u0000lm\u0005"+
		"p\u0000\u0000mn\u0005e\u0000\u0000no\u0005a\u0000\u0000op\u0005t\u0000"+
		"\u0000p\u0006\u0001\u0000\u0000\u0000qr\u0005u\u0000\u0000rs\u0005n\u0000"+
		"\u0000st\u0005t\u0000\u0000tu\u0005i\u0000\u0000uv\u0005l\u0000\u0000"+
		"v\b\u0001\u0000\u0000\u0000wx\u0005i\u0000\u0000xy\u0005f\u0000\u0000"+
		"y\n\u0001\u0000\u0000\u0000z{\u0005e\u0000\u0000{|\u0005l\u0000\u0000"+
		"|}\u0005s\u0000\u0000}~\u0005e\u0000\u0000~\f\u0001\u0000\u0000\u0000"+
		"\u007f\u0080\u0005=\u0000\u0000\u0080\u000e\u0001\u0000\u0000\u0000\u0081"+
		"\u0082\u0005*\u0000\u0000\u0082\u0010\u0001\u0000\u0000\u0000\u0083\u0084"+
		"\u0005/\u0000\u0000\u0084\u0012\u0001\u0000\u0000\u0000\u0085\u0086\u0005"+
		"+\u0000\u0000\u0086\u0014\u0001\u0000\u0000\u0000\u0087\u0088\u0005-\u0000"+
		"\u0000\u0088\u0016\u0001\u0000\u0000\u0000\u0089\u008a\u0005^\u0000\u0000"+
		"\u008a\u0018\u0001\u0000\u0000\u0000\u008b\u008c\u0005!\u0000\u0000\u008c"+
		"\u001a\u0001\u0000\u0000\u0000\u008d\u008e\u0005.\u0000\u0000\u008e\u001c"+
		"\u0001\u0000\u0000\u0000\u008f\u0090\u0005,\u0000\u0000\u0090\u001e\u0001"+
		"\u0000\u0000\u0000\u0091\u0092\u0005;\u0000\u0000\u0092 \u0001\u0000\u0000"+
		"\u0000\u0093\u0094\u0005:\u0000\u0000\u0094\"\u0001\u0000\u0000\u0000"+
		"\u0095\u0096\u0005(\u0000\u0000\u0096$\u0001\u0000\u0000\u0000\u0097\u0098"+
		"\u0005)\u0000\u0000\u0098&\u0001\u0000\u0000\u0000\u0099\u009a\u0005f"+
		"\u0000\u0000\u009a\u009b\u0005o\u0000\u0000\u009b\u009c\u0005r\u0000\u0000"+
		"\u009c(\u0001\u0000\u0000\u0000\u009d\u009e\u0005{\u0000\u0000\u009e*"+
		"\u0001\u0000\u0000\u0000\u009f\u00a0\u0005}\u0000\u0000\u00a0,\u0001\u0000"+
		"\u0000\u0000\u00a1\u00a2\u0005[\u0000\u0000\u00a2.\u0001\u0000\u0000\u0000"+
		"\u00a3\u00a4\u0005]\u0000\u0000\u00a40\u0001\u0000\u0000\u0000\u00a5\u00a6"+
		"\u0005?\u0000\u0000\u00a62\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005a"+
		"\u0000\u0000\u00a8\u00a9\u0005n\u0000\u0000\u00a9\u00aa\u0005d\u0000\u0000"+
		"\u00aa4\u0001\u0000\u0000\u0000\u00ab\u00ac\u0005o\u0000\u0000\u00ac\u00ad"+
		"\u0005r\u0000\u0000\u00ad6\u0001\u0000\u0000\u0000\u00ae\u00af\u0005n"+
		"\u0000\u0000\u00af\u00b0\u0005o\u0000\u0000\u00b0\u00b1\u0005t\u0000\u0000"+
		"\u00b18\u0001\u0000\u0000\u0000\u00b2\u00b3\u0005i\u0000\u0000\u00b3\u00b4"+
		"\u0005n\u0000\u0000\u00b4\u00b5\u0005t\u0000\u0000\u00b5\u00b6\u0005e"+
		"\u0000\u0000\u00b6\u00b7\u0005g\u0000\u0000\u00b7\u00b8\u0005e\u0000\u0000"+
		"\u00b8\u00b9\u0005r\u0000\u0000\u00b9:\u0001\u0000\u0000\u0000\u00ba\u00bb"+
		"\u0005c\u0000\u0000\u00bb\u00bc\u0005h\u0000\u0000\u00bc\u00bd\u0005a"+
		"\u0000\u0000\u00bd\u00be\u0005r\u0000\u0000\u00be<\u0001\u0000\u0000\u0000"+
		"\u00bf\u00c0\u0005r\u0000\u0000\u00c0\u00c1\u0005e\u0000\u0000\u00c1\u00c2"+
		"\u0005c\u0000\u0000\u00c2\u00c3\u0005o\u0000\u0000\u00c3\u00c4\u0005r"+
		"\u0000\u0000\u00c4\u00c5\u0005d\u0000\u0000\u00c5>\u0001\u0000\u0000\u0000"+
		"\u00c6\u00c7\u0005>\u0000\u0000\u00c7\u00c8\u0005=\u0000\u0000\u00c8@"+
		"\u0001\u0000\u0000\u0000\u00c9\u00ca\u0005<\u0000\u0000\u00ca\u00cb\u0005"+
		"=\u0000\u0000\u00cbB\u0001\u0000\u0000\u0000\u00cc\u00cd\u0005>\u0000"+
		"\u0000\u00cdD\u0001\u0000\u0000\u0000\u00ce\u00cf\u0005<\u0000\u0000\u00cf"+
		"F\u0001\u0000\u0000\u0000\u00d0\u00d1\u0005=\u0000\u0000\u00d1\u00d2\u0005"+
		"=\u0000\u0000\u00d2H\u0001\u0000\u0000\u0000\u00d3\u00d4\u0005!\u0000"+
		"\u0000\u00d4\u00d5\u0005=\u0000\u0000\u00d5J\u0001\u0000\u0000\u0000\u00d6"+
		"\u00d7\u0005p\u0000\u0000\u00d7\u00d8\u0005r\u0000\u0000\u00d8\u00d9\u0005"+
		"i\u0000\u0000\u00d9\u00da\u0005n\u0000\u0000\u00da\u00db\u0005t\u0000"+
		"\u0000\u00dbL\u0001\u0000\u0000\u0000\u00dc\u00de\u0007\u0000\u0000\u0000"+
		"\u00dd\u00dc\u0001\u0000\u0000\u0000\u00de\u00df\u0001\u0000\u0000\u0000"+
		"\u00df\u00dd\u0001\u0000\u0000\u0000\u00df\u00e0\u0001\u0000\u0000\u0000"+
		"\u00e0N\u0001\u0000\u0000\u0000\u00e1\u00e5\u0005\"\u0000\u0000\u00e2"+
		"\u00e4\b\u0001\u0000\u0000\u00e3\u00e2\u0001\u0000\u0000\u0000\u00e4\u00e7"+
		"\u0001\u0000\u0000\u0000\u00e5\u00e3\u0001\u0000\u0000\u0000\u00e5\u00e6"+
		"\u0001\u0000\u0000\u0000\u00e6\u00e8\u0001\u0000\u0000\u0000\u00e7\u00e5"+
		"\u0001\u0000\u0000\u0000\u00e8\u00e9\u0005\"\u0000\u0000\u00e9P\u0001"+
		"\u0000\u0000\u0000\u00ea\u00eb\u0005t\u0000\u0000\u00eb\u00ec\u0005r\u0000"+
		"\u0000\u00ec\u00ed\u0005u\u0000\u0000\u00ed\u00f4\u0005e\u0000\u0000\u00ee"+
		"\u00ef\u0005f\u0000\u0000\u00ef\u00f0\u0005a\u0000\u0000\u00f0\u00f1\u0005"+
		"l\u0000\u0000\u00f1\u00f2\u0005s\u0000\u0000\u00f2\u00f4\u0005e\u0000"+
		"\u0000\u00f3\u00ea\u0001\u0000\u0000\u0000\u00f3\u00ee\u0001\u0000\u0000"+
		"\u0000\u00f4R\u0001\u0000\u0000\u0000\u00f5\u00f9\u0007\u0002\u0000\u0000"+
		"\u00f6\u00f8\u0007\u0003\u0000\u0000\u00f7\u00f6\u0001\u0000\u0000\u0000"+
		"\u00f8\u00fb\u0001\u0000\u0000\u0000\u00f9\u00f7\u0001\u0000\u0000\u0000"+
		"\u00f9\u00fa\u0001\u0000\u0000\u0000\u00faT\u0001\u0000\u0000\u0000\u00fb"+
		"\u00f9\u0001\u0000\u0000\u0000\u00fc\u00fd\u0005/\u0000\u0000\u00fd\u00fe"+
		"\u0005/\u0000\u0000\u00fe\u0100\u0001\u0000\u0000\u0000\u00ff\u0101\t"+
		"\u0000\u0000\u0000\u0100\u00ff\u0001\u0000\u0000\u0000\u0101\u0102\u0001"+
		"\u0000\u0000\u0000\u0102\u0103\u0001\u0000\u0000\u0000\u0102\u0100\u0001"+
		"\u0000\u0000\u0000\u0103\u0105\u0001\u0000\u0000\u0000\u0104\u0106\u0007"+
		"\u0004\u0000\u0000\u0105\u0104\u0001\u0000\u0000\u0000\u0106\u0107\u0001"+
		"\u0000\u0000\u0000\u0107\u0108\u0006*\u0000\u0000\u0108V\u0001\u0000\u0000"+
		"\u0000\u0109\u010b\u0007\u0005\u0000\u0000\u010a\u0109\u0001\u0000\u0000"+
		"\u0000\u010b\u010c\u0001\u0000\u0000\u0000\u010c\u010a\u0001\u0000\u0000"+
		"\u0000\u010c\u010d\u0001\u0000\u0000\u0000\u010d\u010e\u0001\u0000\u0000"+
		"\u0000\u010e\u010f\u0006+\u0000\u0000\u010fX\u0001\u0000\u0000\u0000\u0110"+
		"\u0111\u0005+\u0000\u0000\u0111\u0112\u0005=\u0000\u0000\u0112Z\u0001"+
		"\u0000\u0000\u0000\u0113\u0114\u0005-\u0000\u0000\u0114\u0115\u0005=\u0000"+
		"\u0000\u0115\\\u0001\u0000\u0000\u0000\u0116\u0117\u0005+\u0000\u0000"+
		"\u0117\u0118\u0005+\u0000\u0000\u0118^\u0001\u0000\u0000\u0000\u0119\u011a"+
		"\u0005-\u0000\u0000\u011a\u011b\u0005-\u0000\u0000\u011b`\u0001\u0000"+
		"\u0000\u0000\b\u0000\u00df\u00e5\u00f3\u00f9\u0102\u0105\u010c\u0001\u0006"+
		"\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}